/* Styles for the body to center content */
body {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    min-height: 100vh; /* Use min-height to ensure it centers even with little content */
    margin: 0; /* Remove default body margin */
}

/* Styles for the main textboxes */
/* Using a general input[type="text"] and a specific class/data attribute for clarity */
input[type="text"].ai-style-change-2,
input[type="text"][data-purpose="controlled-visibility"] {
    border: 10px solid black; /* Example border */
    border-radius: 20px; /* Example border radius */
    padding: 10px; /* Example padding */
    margin: 5px; /* Add some margin for spacing */
}

/* Initial state for the controlled-visibility textbox */
input[type="text"][data-purpose="controlled-visibility"] {
    display: none;
}


/* Styles for the label */
label.ai-style-change-6 { /* Or use a more stable class/ID */
    font-family: cursive; /* Example font family */
    margin-bottom: 10px; /* Add some spacing below the label */
}

/* Styles for the giant "UwU" / "OwO" textbox */
input[data-purpose="giant-uwu-box"] {
    position: fixed; /* Stay at the top of the viewport */
    top: 0;
    left: 0;
    width: 100%; /* Span full width */
    font-size: 4em; /* Make text giant */
    text-align: center; /* Center placeholder/text */
    padding: 20px 0; /* Add padding top/bottom, no left/right as width is 100% */
    box-sizing: border-box; /* Include padding in the element's total width/height */
    z-index: 1000; /* Ensure it's above other content */
    border: none; /* Remove default border */
    background: lightblue; /* Example background color */
    color: inherit; /* Inherit text color unless changed by JS */
    display: none; /* Initially hidden */
}

/* Note: The .ai-style-change- class names are generated by the DevTools assistant and may change.
   It's best practice to replace these with your own stable class names or IDs in your HTML and CSS.
   The data-purpose attributes are good for targeting specific elements with CSS or JS. */